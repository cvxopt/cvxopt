name: Windows build

on: [push, pull_request]

jobs:
  build:

#    if: false
    
    runs-on: windows-2019
    env:
      SUITESPARSE_VERSION: 5.13.0
      SUITESPARSE_SHA256: dad2d035136b927dead2427205c956f8e857825cec4e419e9a6eaa600aca730a
      OPENBLAS_VERSION: 0.3.22
      CVXOPT_MSVC: 1
      CVXOPT_BUILD_DSDP: 0
      CVXOPT_BUILD_FFTW: 0
      CVXOPT_BUILD_GLPK: 0
      CVXOPT_BUILD_GSL: 0

    strategy:
      matrix:
        suitesparse: [src]
        ARCH: [x64]
        python-version: ['3.8','3.11'] 
        include:
        - ARCH: x64
          MSVC_TARGET: 64
          PLAT_NAME: win-amd64
          OPENBLAS_SHA256: ff08774f0d33077c46b501abffc8ddf90a246c1d714ec8aedccd1de45286d566

        # - ARCH: x86
        #   MSVC_TARGET: 32
        #   PLAT_NAME: win32
        #   OPENBLAS_SHA256: 2eb2a21fc9eaa374132a491aa7f7b28840040e634075c86fb97fc277038e7c15

    steps:

    - name: Checkout source
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.ARCH}}

    - name: Setup msys2
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: coreutils unzip

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools setuptools_scm build wheel pytest pytest-cov coveralls 

    - name: Get OpenBLAS and copy to workspace
      shell: msys2 {0}
      run: |
          wget https://github.com/xianyi/OpenBLAS/releases/download/v${OPENBLAS_VERSION}/OpenBLAS-${OPENBLAS_VERSION}-${{matrix.ARCH}}.zip
          wget https://raw.githubusercontent.com/xianyi/OpenBLAS/v${OPENBLAS_VERSION}/LICENSE -O LICENSE_OpenBLAS-${OPENBLAS_VERSION}
          echo "${{matrix.OPENBLAS_SHA256}}  OpenBLAS-${OPENBLAS_VERSION}-${{matrix.ARCH}}.zip" > OpenBLAS.sha256
          sha256sum -c OpenBLAS.sha256
          mkdir src/python/.libs
          mkdir OpenBLAS
          unzip OpenBLAS-${OPENBLAS_VERSION}-${{matrix.ARCH}}.zip -d OpenBLAS/
          cp OpenBLAS/bin/libopenblas.dll src/python/.libs
          cp OpenBLAS/lib/libopenblas.lib libopenblas.lib       
          cp LICENSE_OpenBLAS-${OPENBLAS_VERSION} src/python  
          echo "CVXOPT_BLAS_LIB_DIR=${{github.workspace}}" >> $GITHUB_ENV
          echo "CVXOPT_BLAS_LIB=libopenblas" >> $GITHUB_ENV
          echo "CVXOPT_LAPACK_LIB=libopenblas" >> $GITHUB_ENV

    - name: Get SuiteSparse source
      shell: msys2 {0}
      if: ${{ matrix.suitesparse == 'src' }}
      run: |
        wget https://github.com/DrTimothyAldenDavis/SuiteSparse/archive/v${SUITESPARSE_VERSION}.zip
        echo "${SUITESPARSE_SHA256}  v${SUITESPARSE_VERSION}.zip" > SuiteSparse.sha256
        sha256sum -c SuiteSparse.sha256
        unzip v${SUITESPARSE_VERSION}.zip
        echo "CVXOPT_SUITESPARSE_SRC_DIR=${{github.workspace}}/SuiteSparse-${{env.SUITESPARSE_VERSION}}" >> $GITHUB_ENV

    - name: Build/install CVXOPT
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars${{matrix.MSVC_TARGET}}.bat"
        python -m build --wheel
        pip install --no-index --find-links=${{github.workspace}}\dist cvxopt

    - name: Test
      shell: cmd
      run: |
        python -c "from cvxopt import blas,lapack,amd,cholmod,umfpack"
        pytest --cov=cvxopt tests
