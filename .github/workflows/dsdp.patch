diff --color -ruN DSDP5.8/Makefile DSDP5.8_patched/Makefile
--- DSDP5.8/Makefile	2005-10-21 21:31:14
+++ DSDP5.8_patched/Makefile	2023-04-10 15:13:26
@@ -1,5 +1,5 @@
 
-default: 
+default:
 	make all
 
 D1       =  src
@@ -10,51 +10,27 @@
 include make.include
 
 dsdplibrary: chkroot info
-	cd ${D1}; make all
-	${RANLIB} ${DSDPLIB}
+	cd src; make all
+	mkdir -p objs
+	find src -name '*.o' -exec mv {} objs/ \;
 
-example:
-	cd ${D2}; make most
+install: dsdplibrary
+ifdef IS_OSX
+	${CC} $(ARCH_FLAGS) -dynamiclib -install_name $(PREFIX)/lib/libdsdp.dylib \
+		    -current_version 5.8 -compatibility_version 5.8 \
+				-o $(PREFIX)/lib/libdsdp.dylib \
+				objs/*.o ${LAPACKBLAS}
+else
+	${CC} -shared -Wl,-soname,libdsdp.so \
+	 	    -o ${PREFIX}/lib/libdsdp.so \
+				objs/*.o ${LAPACKBLAS}
+endif
+	${CP} include/*.h ${PREFIX}/include
 
-test:
-	cd ${D4}; make all
-
-dmatlab:
-	cd ${D2}; make dsdp
-
-dsdpmatlab: dsdplibrary
-	make dmatlab
-
-dsdpapi: dsdplibrary
-	make example
-	make test;
-
-install:
-	make dsdplibrary
-	make example
-	make test
-	make dmatlab
-
-all:
-	make install
-
 clean:
 	cd ${D1}; make clean
 	cd ${D2}; make clean
 	cd ${D4}; make clean
 	${RM} lib/lib* matlab/dsdp.mex*
 	${RM} *~ */*~ */*/*~
-
-htmlzip:
-	zip -r DSDP5-api-html.zip dox
-	${RM} -R dox
-
-oshared: 
-	-@${RM} tmp; \
-	mkdir tmp; \
-	cd tmp; \
-	echo "building ${DSDPLIBSO}"; \
-	${AR} x ${DSDPLIB} ;\
-	${SH_LD} ${DSDPLIBSO} *.o -o ${DSDPLIBSO}; \
-	cd ../ ; \
-	${RM} tmp
+	${RM} objs/*.o
diff --color -ruN DSDP5.8/make.include DSDP5.8_patched/make.include
--- DSDP5.8/make.include	2005-10-21 21:31:14
+++ DSDP5.8_patched/make.include	2023-04-10 14:39:54
@@ -1,87 +1,10 @@
-# STEP 1: Set DSDPROOT in this file or comment out and make it an environment variable
-#DSDPROOT	= /home/benson/dsdp/DSDP5.8
-#DSDPROOT	= Y:\dsdp\DSDP5.8
-
-# LINUX and GCC USERS can probably stop here, 
-#   the defaults below should work, although fast BLAS and LAPACK recommended.
-
-# STEP 2: Set the name of the C compiler. 
-CC       = gcc
-#CC       = cc 
-#CC       = g++ 
-#CC       = mpicc
-#CC       = g++ # GNU C++ 
-#CC       = icc # INTEL
-#CC       = pgcc # Portland Group
-#CC	 = ecc -KPIC
-#CC       = cl  # CYGWIN
-
-
-# STEP 3:  Set three compiler options.  
-
-# STEP 3a: Compiler Optimization. You should probably add a -On where
-# n is the maximum optimization allowed by your C compiler.
-OPTFLAGS = -O3
-#OPTFLAGS = /O2
-
-# STEP 3b: Add timing support by uncommenting one of the following lines.
-# no timing is completely portable, DSDP_MS_TIME for Microsoft compiler,
-# and DSDP_TIME for gcc and many other Linux/Unix compilers.
-#DSDPTIMER = NONE
+LAPACKBLAS = -L/usr/lib -llapack -lblas
+OPTFLAGS = -O2 -fPIC -mtune=generic
 DSDPTIMER  = DSDP_TIME
-#DSDPTIMER  = DSDP_MS_TIME
-
-# STEP 3c: Add other compiler flags.
-DSDPCFLAGS = 
-#DSDPCFLAGS = -Wall
-#DSDPCFLAGS = -DDSDPMATLAB
-#  Other flags concern BLAS and LAPACK libraries -- see next step.
-#  -DCAPSBLAS         if BLAS and LAPACK routine names are capitalized.
-#  -DNOUNDERBLAS      if BLAS and LAPACK routine names have no underscore.
-#  -D__DSDP_NONAMEMANGLING  if using C++ compiler and BLAS LAPACK names should not be mangled. This should be picked up automatically.
-
-
-
-# STEP 4.  Set Linker and FLAGS:  Link the DSDP library to application
-CFLAGS   = ${OPTFLAGS} -I. -I${DSDPROOT}/include ${DSDPCFLAGS}
+DSDPCFLAGS = -Wall
+CFLAGS   = ${ARCH_FLAGS} ${OPTFLAGS} -I. -I${DSDPROOT}/include ${DSDPCFLAGS}
 CLINKER	= ${CC} ${OPTFLAGS}
-#CLINKER	= ${CXX} ${OPTFLAGS} -static
-#CLINKER	= link /out:dsdp5.exe
 
-#SH_LD = ${CC} -shared -W1,-soname,
-
-# STEP 5:
-# Location of BLAS AND LAPACK libraries. 
-# Not needed to compile library or matlab executable
-# Needed to link DSDP library to the driver ( read SDPA files, maxcut example, ...)
-# Also include the math library and other libraries needed to link the BLAS to the C files that call them.
-LAPACKBLAS  = -llapack -lblas -lg2c -lm
-#LAPACKBLAS  = -L/usr/lib/ -llapack -lblas -lg2c -lm
-#LAPACKBLAS  = -L/home/benson/ATLAS/Linux_P4SSE2/lib -llapack -lcblas -lf77blas -latlas -lg2c -lm
-#LAPACKBLAS  = -L/sandbox/benson/ATLAS-3.6/lib/Linux_P4SSE2  -llapack -lcblas -lf77blas -latlas -lg2c -lm 
-#LAPACKBLAS  = /soft/apps/packages/lapack-3.0/lib/lapack_LINUX.a -L/soft/apps/packages/atlas-3.6.0/lib -lcblas -lf77blas -latlas -lg2c -lm
-
-
-# STEP 6, MATLAB MACROS - If compiling Matlab interface, check MEX flag.
-MEX           = mex -O
-#MEX     = C:\Matlab\bin\mex
-DSDPMATLABDIR = ${DSDPROOT}/matlab
-
-# Location of the DSDP library
-DSDPLIB = ${DSDPROOT}/lib/libdsdp.a
-DSDPLIBSO = ${DSDPROOT}/lib/libdsdp.so
-
-# Link drivers to the following libraries.
-# EXAMPLE_LIBS = ${DSDPLIB} ${LAPACKBLAS}
-
-#Directory to put the examples after compiling them.
-EXECDIR = ${DSDPROOT}/bin/
-
-# STEP 7  SET Operating system commands 
-# Other build information, archive, remove, move, copy
-ARCH     = ar cr
-RANLIB   = ranlib
-#RANLIB   = echo
 RM       = rm -f
 MV       = mv
 CP	 = cp
@@ -90,11 +13,9 @@
 PP	 = ../
 
 dsdplib: ${DSDPOBJ}
-	${ARCH} ${DSDPLIB} ${DSDPOBJ}
-	${RANLIB} ${DSDPLIB}	
-	make clean
 
-.c.o: 
+
+.c.o:
 	${CC} ${CFLAGS} ${DCFLAGS} -c $*.c
 
 info:
@@ -108,7 +29,7 @@
 	-@echo On `date` on `hostname`
 	-@echo Machine characteristics: `uname -a`
 	-@echo "-----------------------------------------"
-	-@echo "Using C compiler: ${CC}" 
+	-@echo "Using C compiler: ${CC}"
 	-@echo "Using compiler options: ${CFLAGS}"
 	-@echo "-----------------------------------------"
 	-@echo "Current Directory: ${PWD}"
@@ -117,7 +38,7 @@
 	-@echo " "
 #
 
-chkroot: 
+chkroot:
 	@if [ ${DSDPROOT}foo = foo ] ; then \
 	  echo "*********************** ERROR **********************" ; \
 	  echo "Set the variable DSDPROOT " ; \
diff --color -ruN DSDP5.8/src/sys/dsdploginfo.c DSDP5.8_patched/src/sys/dsdploginfo.c
--- DSDP5.8/src/sys/dsdploginfo.c	2005-10-21 21:31:15
+++ DSDP5.8_patched/src/sys/dsdploginfo.c	2023-04-10 14:39:54
@@ -6,7 +6,9 @@
 #include <stdarg.h>
 #include <sys/types.h>
 #include <stdlib.h>
+#ifndef __APPLE__
 #include <malloc.h>
+#endif
 #include "dsdpsys.h"
 #include "dsdpbasictypes.h"
 
